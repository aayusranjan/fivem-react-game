{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\OneDrive\\\\New folder\\\\javascript\\\\20javaScriptProjecttraversemedia\\\\areact\\\\src\\\\Typer.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./Typer.css\";\n// // import \"./script.js\";\n// const CHARS_PER_STROKES = 3\n\n// const HackerTypeClone = () => {\n//   const [sourceCode, setSourceCode] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [currentIndex, setCurrentIndex] = useState(0);\n\n//   const containerRef = useRef(null);\n//     const paragraphRef = useRef(null);\n\n//   useEffect(() => {\n//     containerRef.current.focus();\n//     fetch(\"code.txt\")\n//       .then((res) => res.text())\n//       .then((text) => setSourceCode(text));\n//   }, []);\n\n//   const runScript = () => {\n//     setCurrentIndex(currentIndex+CHARS_PER_STROKES);\n//     setContent(sourceCode.substring(0,currentIndex))\n//   };\n\n//   paragraphRef.current.scrollIntoView();\n\n//   const removeMessage = () => {\n//     console.log(\"remove message\");\n//   };\n//   const handleKeyDown = (e) => {\n//     if (e.key !== \"Escape\") runScript();\n\n//     else removeMessage();\n//   };\n//   return (\n//     <div\n//       id=\"container\"\n//       onKeyDown={handleKeyDown}\n//       tabIndex={0}\n//       ref={containerRef}\n//     >\n//       <div id=\"source\">{content}</div>\n//       <p ref={paragraphRef}></p>\n//     </div>\n//   );\n// };\n\n// export default HackerTypeClone;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport GameBox from \"./GameBox\";\nimport \"./Typer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CHARS_PER_STROKES = 3;\nconst HackerTypeClone = () => {\n  _s();\n  const [sourceCode, setSourceCode] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [completedRuns, setCompletedRuns] = useState(0);\n  const [showWhiteScreen, setShowWhiteScreen] = useState(false);\n  const containerRef = useRef(null);\n  const paragraphRef = useRef(null);\n  useEffect(() => {\n    containerRef.current.focus();\n    fetch(\"code.txt\").then(res => res.text()).then(text => setSourceCode(text));\n  }, []);\n\n  //   const runScript = () => {\n  //     setCurrentIndex(currentIndex + CHARS_PER_STROKES);\n  //     setContent(sourceCode.substring(0, currentIndex));\n  //     paragraphRef.current.scrollIntoView();\n  //   };\n  const runScript = () => {\n    setCurrentIndex(currentIndex + CHARS_PER_STROKES);\n    setContent(sourceCode.substring(0, currentIndex));\n    if (completedRuns >= 100) {\n      setShowWhiteScreen(true);\n    } else {\n      setCompletedRuns(completedRuns + 1);\n    }\n    paragraphRef.current.scrollIntoView();\n  };\n  const removeMessage = () => {\n    console.log(\"remove message\");\n  };\n  const handleKeyDown = e => {\n    if (e.key !== \"Escape\") runScript();else removeMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(HackerTypeClone, \"2gnA9vWk6OrUTrxSZgfNzwA2b5w=\");\n_c = HackerTypeClone;\nexport default HackerTypeClone;\nvar _c;\n$RefreshReg$(_c, \"HackerTypeClone\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GameBox","jsxDEV","_jsxDEV","Fragment","_Fragment","CHARS_PER_STROKES","HackerTypeClone","_s","sourceCode","setSourceCode","content","setContent","currentIndex","setCurrentIndex","completedRuns","setCompletedRuns","showWhiteScreen","setShowWhiteScreen","containerRef","paragraphRef","current","focus","fetch","then","res","text","runScript","substring","scrollIntoView","removeMessage","console","log","handleKeyDown","e","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ayush/OneDrive/New folder/javascript/20javaScriptProjecttraversemedia/areact/src/Typer.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\n// import \"./Typer.css\";\r\n// // import \"./script.js\";\r\n// const CHARS_PER_STROKES = 3\r\n\r\n// const HackerTypeClone = () => {\r\n//   const [sourceCode, setSourceCode] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n//   const containerRef = useRef(null);\r\n//     const paragraphRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     containerRef.current.focus();\r\n//     fetch(\"code.txt\")\r\n//       .then((res) => res.text())\r\n//       .then((text) => setSourceCode(text));\r\n//   }, []);\r\n\r\n//   const runScript = () => {\r\n//     setCurrentIndex(currentIndex+CHARS_PER_STROKES);\r\n//     setContent(sourceCode.substring(0,currentIndex))\r\n//   };\r\n\r\n//   paragraphRef.current.scrollIntoView();\r\n\r\n//   const removeMessage = () => {\r\n//     console.log(\"remove message\");\r\n//   };\r\n//   const handleKeyDown = (e) => {\r\n//     if (e.key !== \"Escape\") runScript();\r\n   \r\n//     else removeMessage();\r\n//   };\r\n//   return (\r\n//     <div\r\n//       id=\"container\"\r\n//       onKeyDown={handleKeyDown}\r\n//       tabIndex={0}\r\n//       ref={containerRef}\r\n//     >\r\n//       <div id=\"source\">{content}</div>\r\n//       <p ref={paragraphRef}></p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HackerTypeClone;\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport GameBox from \"./GameBox\";\r\nimport \"./Typer.css\";\r\n\r\nconst CHARS_PER_STROKES = 3;\r\n\r\nconst HackerTypeClone = () => {\r\n  const [sourceCode, setSourceCode] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [completedRuns, setCompletedRuns] = useState(0);\r\n  const [showWhiteScreen, setShowWhiteScreen] = useState(false);\r\n\r\n  const containerRef = useRef(null);\r\n  const paragraphRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    containerRef.current.focus();\r\n    fetch(\"code.txt\")\r\n      .then((res) => res.text())\r\n      .then((text) => setSourceCode(text));\r\n  }, []);\r\n\r\n//   const runScript = () => {\r\n//     setCurrentIndex(currentIndex + CHARS_PER_STROKES);\r\n//     setContent(sourceCode.substring(0, currentIndex));\r\n//     paragraphRef.current.scrollIntoView();\r\n//   };\r\nconst runScript = () => {\r\n    setCurrentIndex(currentIndex + CHARS_PER_STROKES);\r\n    setContent(sourceCode.substring(0, currentIndex));\r\n    if (completedRuns >= 100) {\r\n      setShowWhiteScreen(true);\r\n    } else {\r\n      setCompletedRuns(completedRuns + 1);\r\n    }\r\n    paragraphRef.current.scrollIntoView();\r\n  };\r\n\r\n  const removeMessage = () => {\r\n    console.log(\"remove message\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key !== \"Escape\") runScript();\r\n    else removeMessage();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        {/* <div\r\n          id=\"container\"\r\n          onKeyDown={handleKeyDown}\r\n          tabIndex={0}\r\n          ref={containerRef}\r\n        >\r\n          <div id=\"source\">{content}</div>\r\n          <p ref={paragraphRef}></p>\r\n        </div>\r\n        {showWhiteScreen && <GameBox />} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HackerTypeClone;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,iBAAiB,GAAG,CAAC;AAE3B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMqB,YAAY,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMoB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACE,OAAO,CAACC,KAAK,EAAE;IAC5BC,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAKhB,aAAa,CAACgB,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBb,eAAe,CAACD,YAAY,GAAGP,iBAAiB,CAAC;IACjDM,UAAU,CAACH,UAAU,CAACmB,SAAS,CAAC,CAAC,EAAEf,YAAY,CAAC,CAAC;IACjD,IAAIE,aAAa,IAAI,GAAG,EAAE;MACxBG,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLF,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IACrC;IACAK,YAAY,CAACC,OAAO,CAACQ,cAAc,EAAE;EACvC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;EAED,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,EAAER,SAAS,EAAE,CAAC,KAC/BG,aAAa,EAAE;EACtB,CAAC;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACEjC,OAAA;MAAKkC,SAAS,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAWd,iBACL;AAEP,CAAC;AAACjC,EAAA,CA1DID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA4DrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}